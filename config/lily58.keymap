/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// CONFIG
#define COMBO_TIMEOUT 70
#define COMBO_LAYERS 0
#define STICKY_TIMEOUT 500

// LEFT SIDE
#define TLI 16 // TOP
#define TLM 15 // TOP
#define TLR 14 // TOP
#define TLP 13 // TOP
#define BLI 28 // BOTTOM
#define BLM 27 // BOTTOM
#define BLR 26 // BOTTOM
#define BLP 25 // BOTTOM
#define LOT 53 // O-THUMB
#define LIT 52 // I-THUMB

// RIGHT SIDE
#define TRI 19 // TOP
#define TRM 20 // TOP
#define TRR 21 // TOP
#define TRP 22 // TOP
#define BRI 31 // BOTTOM
#define BRM 32 // BOTTOM
#define BRR 33 // BOTTOM
#define BRP 34 // BOTTOM
#define ROT 54 // O-THUMB
#define RIT 55 // I-THUMB

&sk {
    release-after-ms = <STICKY_TIMEOUT>;
    quick-release;
};

/ {
  combos {
    compatible = "zmk,combos";
    #include "taipo.dtsi"
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &none            &none            &none            &none             &none            &none                                              &none            &none            &none            &none            &none            &none
        &none            &none            &none            &none             &none            &none                                              &none            &none            &none            &none            &none            &none
        &none            &none            &none            &none             &none            &none                                              &none            &none            &none            &none            &none            &none
        &none            &none            &none            &none             &none            &none            &none            &none            &none            &none            &none            &none            &none            &none
                                                           &none             &none            &none            &none            &none            &none            &none            &none
      >;
    };
  };
};
